@model SimpleFitness.Backend.Models.DailyMacroTracker

@{
    ViewBag.Title = "Macro Tracker";
}

<h2>Macro Tracker</h2>

@using (Html.BeginForm()) {
    @Html.AntiForgeryToken()
    <div class="row">
        <div class="col-2">
            <hr />
            <dl class="dl-horizontal">
                <dt>
                    @Html.DisplayNameFor(model => model.Protein)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.Protein)
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.Fat)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.Fat)
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.Carbs)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.Carbs)
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.TotalCalories)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.TotalCalories)
                </dd>
            </dl>
        </div>

        <div class="col form-horizontal">
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.Id)

            <div class="form-group">
                @Html.LabelFor(model => model.Protein, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Protein, new { htmlAttributes = new { @class = "form-control", @Value = 0 } })
                    @Html.ValidationMessageFor(model => model.Protein, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Fat, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Fat, new { htmlAttributes = new { @class = "form-control", @Value = 0 } })
                    @Html.ValidationMessageFor(model => model.Fat, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Carbs, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Carbs, new { htmlAttributes = new { @class = "form-control", @Value = 0 } })
                    @Html.ValidationMessageFor(model => model.Carbs, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Add" class="btn btn-primary mt-3 px-4" />
                </div>
            </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
